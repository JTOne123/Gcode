using System;
using System.Linq;
using Gcode.Utils.Entity.Slicer;

namespace Gcode.Utils.SlicerParser
{
	public class PrusaSlicerParser: SlicerParserBase<Slic3RInfo>
	{
		public override Slic3RInfo GetSlicerInfo(string[] fileContent)
		{
			var name = fileContent.FirstOrDefault(x => x.StartsWith("; generated by PrusaSlicer "));

			if (name?.Split(' ')[3] == null) return null;

			var res = new Slic3RInfo
			{
				Name = name.Split(' ')[3],
				Version = name.Split(' ')[4],
				// no edition provided by Slic3r
				Edition = string.Empty,
			};

			var filamentUsed = fileContent.Where(x => x.StartsWith("; filament used [mm] = ")).ToArray();
			if (filamentUsed.Length == 1 && filamentUsed[0] != null)
			{
				res.FilamentUsedExtruder1 = Convert.ToDecimal(filamentUsed[0].Split(';')[1].Split('=')[1].Trim().Replace(".",","));
			}

			if (filamentUsed.Length == 2 && filamentUsed[1] != null)
			{
				// filament used
				res.FilamentUsedExtruder2 = Convert.ToDecimal(filamentUsed[1].Split(';')[1].Split('=')[1].Trim().Replace(".",","));
			}

			var filamentDiameter = fileContent.FirstOrDefault(x => x.StartsWith("; filament_diameter"));

			if (!string.IsNullOrWhiteSpace(filamentDiameter))
			{
				var diameter = filamentDiameter.Split('=')?[1];
				if (string.IsNullOrWhiteSpace(diameter))
				{
					res.FilamentDiameter = null;
				}
				else
				{
					if (diameter.Contains(",")) diameter = diameter.Split(',')[0];
					res.FilamentDiameter = Convert.ToDecimal(diameter.Replace(".", ","));
				}
				
			}

			if (res.FilamentUsedExtruder1 != null && res.FilamentUsedExtruder1 > 0 && res.FilamentDiameter != null && res.FilamentDiameter > 0)
			{
				// обьем = сечение * длину
				res.FilamentUsedExtruder1Volume = res.FilamentDiameter * res.FilamentUsedExtruder1;
			}

			if (res.FilamentUsedExtruder2 != null && res.FilamentUsedExtruder2 > 0 && res.FilamentDiameter != null && res.FilamentDiameter > 0)
			{
				// обьем = сечение * длину
				res.FilamentUsedExtruder2Volume = res.FilamentDiameter * res.FilamentUsedExtruder2;
			}

			return res;
		}
	}
}
